<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL on 雪国流明</title><link>https://muo123.github.io/tags/sql/</link><description>Recent content in SQL on 雪国流明</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>muo123</copyright><lastBuildDate>Fri, 13 Jun 2025 11:41:43 +0800</lastBuildDate><atom:link href="https://muo123.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml"/><item><title>详细了解 SQL</title><link>https://muo123.github.io/articles/%E8%AF%A6%E7%BB%86%E4%BA%86%E8%A7%A3-sql/</link><pubDate>Tue, 10 Jun 2025 19:54:08 +0800</pubDate><guid>https://muo123.github.io/articles/%E8%AF%A6%E7%BB%86%E4%BA%86%E8%A7%A3-sql/</guid><description>&lt;p>&lt;strong>SQL (Structured Query Language)&lt;/strong>，它是与关系型数据库进行交互的&lt;strong>标准编程语言&lt;/strong>。&lt;/p>
&lt;h2 id="核心概念">核心概念
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>关系型数据库 (RDBMS):&lt;/strong>
&lt;ul>
&lt;li>SQL 操作的对象是&lt;strong>关系型数据库管理系统&lt;/strong>，如 MySQL, PostgreSQL, Oracle, Microsoft SQL Server, SQLite 等。&lt;/li>
&lt;li>数据以&lt;strong>表&lt;/strong>的形式组织存储，类似于电子表格。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>表 (Table):&lt;/strong>
&lt;ul>
&lt;li>数据库中的基本结构，用于存储特定类型的数据实体（例如：&lt;code>Customers&lt;/code>, &lt;code>Orders&lt;/code>, &lt;code>Products&lt;/code>）。&lt;/li>
&lt;li>一个数据库通常包含多个表。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>列 (Column):&lt;/strong>
&lt;ul>
&lt;li>定义表中的属性或字段（例如：在 &lt;code>Customers&lt;/code> 表中，可能有 &lt;code>CustomerID&lt;/code>, &lt;code>FirstName&lt;/code>, &lt;code>LastName&lt;/code>, &lt;code>Email&lt;/code>, &lt;code>City&lt;/code> 等列）。&lt;/li>
&lt;li>每列有特定的数据类型（如整数 &lt;code>INT&lt;/code>, 字符串 &lt;code>VARCHAR&lt;/code>, 日期 &lt;code>DATE&lt;/code>, 布尔值 &lt;code>BOOLEAN&lt;/code> 等）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>行 (Row) / 记录 (Record):&lt;/strong>
&lt;ul>
&lt;li>表中的一条具体数据项（例如：一行代表一个具体的客户信息）。&lt;/li>
&lt;li>每一行在表中应该是唯一的（通常通过主键保证）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>主键 (Primary Key):&lt;/strong>
&lt;ul>
&lt;li>表中一列或一组列，其值能&lt;strong>唯一标识&lt;/strong>表中的每一行（例如：&lt;code>CustomerID&lt;/code>）。不能为 &lt;code>NULL&lt;/code> 且值必须唯一。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>外键 (Foreign Key):&lt;/strong>
&lt;ul>
&lt;li>一个表中的一列（或一组列），其值引用另一个表的&lt;strong>主键&lt;/strong>。用于建立表与表之间的&lt;strong>关系&lt;/strong>（例如：&lt;code>Orders&lt;/code> 表中的 &lt;code>CustomerID&lt;/code> 列是外键，引用 &lt;code>Customers&lt;/code> 表的主键 &lt;code>CustomerID&lt;/code>）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="sql-的主要组成部分按功能分类">SQL 的主要组成部分（按功能分类）
&lt;/h2>&lt;p>SQL 语句根据其功能主要分为以下几类：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>DDL (Data Definition Language - 数据定义语言):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用于&lt;strong>定义、修改和删除数据库结构&lt;/strong>（模式）。&lt;/li>
&lt;li>主要语句：
&lt;ul>
&lt;li>&lt;code>CREATE&lt;/code>: 创建数据库、表、索引、视图等对象。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">CREATE&lt;/span> &lt;span style="color:#ff6ac1">TABLE&lt;/span> Customers (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CustomerID &lt;span style="color:#ff5c57">INT&lt;/span> &lt;span style="color:#ff6ac1">PRIMARY&lt;/span> &lt;span style="color:#ff6ac1">KEY&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FirstName &lt;span style="color:#ff5c57">VARCHAR&lt;/span>(&lt;span style="color:#ff9f43">50&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LastName &lt;span style="color:#ff5c57">VARCHAR&lt;/span>(&lt;span style="color:#ff9f43">50&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Email &lt;span style="color:#ff5c57">VARCHAR&lt;/span>(&lt;span style="color:#ff9f43">100&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>ALTER&lt;/code>: 修改现有数据库对象的结构（如添加、删除或修改列）。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">ALTER&lt;/span> &lt;span style="color:#ff6ac1">TABLE&lt;/span> Customers &lt;span style="color:#ff6ac1">ADD&lt;/span> &lt;span style="color:#ff6ac1">COLUMN&lt;/span> PhoneNumber &lt;span style="color:#ff5c57">VARCHAR&lt;/span>(&lt;span style="color:#ff9f43">20&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>DROP&lt;/code>: 删除数据库对象（表、索引、视图等）。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">DROP&lt;/span> &lt;span style="color:#ff6ac1">TABLE&lt;/span> OldCustomers;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>TRUNCATE&lt;/code>: 快速删除表中的所有数据（保留表结构），通常比 &lt;code>DELETE&lt;/code> 更快且不记录单个行删除。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">TRUNCATE&lt;/span> &lt;span style="color:#ff6ac1">TABLE&lt;/span> LogEntries;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>DML (Data Manipulation Language - 数据操作语言):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用于&lt;strong>操作数据库表中的实际数据&lt;/strong>（增、删、改）。&lt;/li>
&lt;li>主要语句：
&lt;ul>
&lt;li>&lt;code>INSERT&lt;/code>: 向表中插入新的数据行。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">INSERT&lt;/span> &lt;span style="color:#ff6ac1">INTO&lt;/span> Customers (FirstName, LastName, Email)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">VALUES&lt;/span> (&lt;span style="color:#5af78e">&amp;#39;John&amp;#39;&lt;/span>, &lt;span style="color:#5af78e">&amp;#39;Doe&amp;#39;&lt;/span>, &lt;span style="color:#5af78e">&amp;#39;john.doe@example.com&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>UPDATE&lt;/code>: 修改表中已有的数据行。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">UPDATE&lt;/span> Customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">SET&lt;/span> Email &lt;span style="color:#ff6ac1">=&lt;/span> &lt;span style="color:#5af78e">&amp;#39;new.email@example.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">WHERE&lt;/span> CustomerID &lt;span style="color:#ff6ac1">=&lt;/span> &lt;span style="color:#ff9f43">123&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>DELETE&lt;/code>: 从表中删除数据行。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">DELETE&lt;/span> &lt;span style="color:#ff6ac1">FROM&lt;/span> Customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">WHERE&lt;/span> CustomerID &lt;span style="color:#ff6ac1">=&lt;/span> &lt;span style="color:#ff9f43">456&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>DQL (Data Query Language - 数据查询语言):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>主要用于&lt;strong>从数据库中检索数据&lt;/strong>。虽然只有一个核心语句，但它是最常用和最复杂的部分。&lt;/li>
&lt;li>核心语句：
&lt;ul>
&lt;li>&lt;code>SELECT&lt;/code>: 从一个或多个表中查询数据。功能极其强大，包含众多子句：
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">SELECT&lt;/span> column1, column2, ... &lt;span style="color:#ff6ac1">|&lt;/span> &lt;span style="color:#ff6ac1">*&lt;/span> &lt;span style="color:#78787e">-- 选择要返回的列 (* 表示所有列)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>&lt;span style="color:#ff6ac1">FROM&lt;/span> &lt;span style="color:#ff6ac1">table_name&lt;/span> &lt;span style="color:#78787e">-- 指定数据来源的表
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>[&lt;span style="color:#ff6ac1">WHERE&lt;/span> condition] &lt;span style="color:#78787e">-- 过滤行 (基于指定条件)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>[&lt;span style="color:#ff6ac1">GROUP&lt;/span> &lt;span style="color:#ff6ac1">BY&lt;/span> &lt;span style="color:#ff6ac1">column_name&lt;/span>] &lt;span style="color:#78787e">-- 将结果集按一列或多列分组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>[&lt;span style="color:#ff6ac1">HAVING&lt;/span> condition] &lt;span style="color:#78787e">-- 对分组后的结果集进行过滤 (与 GROUP BY 配合使用)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>[&lt;span style="color:#ff6ac1">ORDER&lt;/span> &lt;span style="color:#ff6ac1">BY&lt;/span> &lt;span style="color:#ff6ac1">column_name&lt;/span> [&lt;span style="color:#ff6ac1">ASC&lt;/span>&lt;span style="color:#ff6ac1">|&lt;/span>&lt;span style="color:#ff6ac1">DESC&lt;/span>]] &lt;span style="color:#78787e">-- 对结果集排序 (ASC 升序, DESC 降序)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e">&lt;/span>[&lt;span style="color:#ff6ac1">LIMIT&lt;/span> &lt;span style="color:#ff5c57">number&lt;/span>]; &lt;span style="color:#78787e">-- 限制返回的行数
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>关键子句详解 (&lt;code>SELECT&lt;/code>):&lt;/strong>
&lt;ul>
&lt;li>&lt;code>JOIN&lt;/code> (&lt;code>INNER JOIN&lt;/code>, &lt;code>LEFT JOIN&lt;/code> / &lt;code>LEFT OUTER JOIN&lt;/code>, &lt;code>RIGHT JOIN&lt;/code> / &lt;code>RIGHT OUTER JOIN&lt;/code>, &lt;code>FULL JOIN&lt;/code> / &lt;code>FULL OUTER JOIN&lt;/code>, &lt;code>CROSS JOIN&lt;/code>): 用于&lt;strong>组合来自两个或多个表&lt;/strong>的行，基于它们之间的相关列（通常是外键关系）。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">SELECT&lt;/span> Orders.OrderID, Customers.FirstName, Customers.LastName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span> Orders
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">INNER&lt;/span> &lt;span style="color:#ff6ac1">JOIN&lt;/span> Customers &lt;span style="color:#ff6ac1">ON&lt;/span> Orders.CustomerID &lt;span style="color:#ff6ac1">=&lt;/span> Customers.CustomerID; &lt;span style="color:#78787e">-- 只返回有匹配订单的客户
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>&lt;code>INNER JOIN&lt;/code>:&lt;/strong> 只返回两个表中匹配的行。&lt;/li>
&lt;li>&lt;strong>&lt;code>LEFT (OUTER) JOIN&lt;/code>:&lt;/strong> 返回左表 (FROM 后的表) 的所有行，即使右表中没有匹配。右表不匹配的部分用 &lt;code>NULL&lt;/code> 填充。&lt;/li>
&lt;li>&lt;strong>&lt;code>RIGHT (OUTER) JOIN&lt;/code>:&lt;/strong> 返回右表 (JOIN 后的表) 的所有行，即使左表中没有匹配。左表不匹配的部分用 &lt;code>NULL&lt;/code> 填充。&lt;/li>
&lt;li>&lt;strong>&lt;code>FULL (OUTER) JOIN&lt;/code>:&lt;/strong> 返回左右两表中所有的行。不匹配的部分用 &lt;code>NULL&lt;/code> 填充。&lt;/li>
&lt;li>&lt;strong>&lt;code>CROSS JOIN&lt;/code>:&lt;/strong> 返回两个表的笛卡尔积（所有可能的行组合）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>子查询 (Subquery):&lt;/strong> 嵌套在另一个 &lt;code>SELECT&lt;/code>, &lt;code>INSERT&lt;/code>, &lt;code>UPDATE&lt;/code>, &lt;code>DELETE&lt;/code> 语句或另一个子查询中的查询。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">SELECT&lt;/span> CustomerName
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span> Customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">WHERE&lt;/span> CustomerID &lt;span style="color:#ff6ac1">IN&lt;/span> (&lt;span style="color:#ff6ac1">SELECT&lt;/span> CustomerID &lt;span style="color:#ff6ac1">FROM&lt;/span> Orders &lt;span style="color:#ff6ac1">WHERE&lt;/span> OrderDate &lt;span style="color:#ff6ac1">&amp;gt;&lt;/span> &lt;span style="color:#5af78e">&amp;#39;2023-01-01&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>集合操作 (Set Operations):&lt;/strong> 组合多个 &lt;code>SELECT&lt;/code> 语句的结果集。
&lt;ul>
&lt;li>&lt;code>UNION&lt;/code>: 合并结果集，&lt;strong>自动去除重复行&lt;/strong>。&lt;/li>
&lt;li>&lt;code>UNION ALL&lt;/code>: 合并结果集，&lt;strong>包含所有行（包括重复行）&lt;/strong>。&lt;/li>
&lt;li>&lt;code>INTERSECT&lt;/code>: 返回两个查询结果集的&lt;strong>交集&lt;/strong>（共同存在的行）。&lt;/li>
&lt;li>&lt;code>EXCEPT&lt;/code> (或 &lt;code>MINUS&lt;/code>): 返回第一个查询结果集中&lt;strong>排除&lt;/strong>第二个查询结果集内容后的行。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>DCL (Data Control Language - 数据控制语言):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用于&lt;strong>控制数据库访问权限和安全性&lt;/strong>。&lt;/li>
&lt;li>主要语句：
&lt;ul>
&lt;li>&lt;code>GRANT&lt;/code>: 授予用户或角色对数据库对象的特定权限（如 &lt;code>SELECT&lt;/code>, &lt;code>INSERT&lt;/code>, &lt;code>UPDATE&lt;/code>, &lt;code>DELETE&lt;/code>, &lt;code>ALL PRIVILEGES&lt;/code>）。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">GRANT&lt;/span> &lt;span style="color:#ff6ac1">SELECT&lt;/span>, &lt;span style="color:#ff6ac1">INSERT&lt;/span> &lt;span style="color:#ff6ac1">ON&lt;/span> Customers &lt;span style="color:#ff6ac1">TO&lt;/span> user_reporting;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;code>REVOKE&lt;/code>: 撤销之前授予的权限。
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">REVOKE&lt;/span> &lt;span style="color:#ff6ac1">DELETE&lt;/span> &lt;span style="color:#ff6ac1">ON&lt;/span> Orders &lt;span style="color:#ff6ac1">FROM&lt;/span> user_intern;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>TCL (Transaction Control Language - 事务控制语言):&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>用于&lt;strong>管理数据库中的事务&lt;/strong>。事务是一组作为单个逻辑工作单元执行的 SQL 语句，要么全部成功，要么全部失败（ACID 特性：原子性、一致性、隔离性、持久性）。&lt;/li>
&lt;li>主要语句：
&lt;ul>
&lt;li>&lt;code>BEGIN TRANSACTION&lt;/code> (或 &lt;code>START TRANSACTION&lt;/code>): 显式开始一个事务。&lt;/li>
&lt;li>&lt;code>COMMIT&lt;/code>: 提交事务，使事务中所有修改永久生效。&lt;/li>
&lt;li>&lt;code>ROLLBACK&lt;/code>: 回滚事务，撤销事务中所有未提交的修改。&lt;/li>
&lt;li>&lt;code>SAVEPOINT&lt;/code>: 在事务内设置保存点，允许部分回滚到该点。&lt;/li>
&lt;li>&lt;code>SET TRANSACTION&lt;/code>: 设置事务特性（如隔离级别）。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="sql-的重要特性">SQL 的重要特性
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>声明式语言 (Declarative):&lt;/strong> 你主要描述&lt;strong>你想要什么数据&lt;/strong>（&lt;code>SELECT ... WHERE ...&lt;/code>），而不是像过程式语言那样详细指定计算机如何一步步获取数据。数据库引擎的&lt;strong>查询优化器&lt;/strong>负责找出最高效的执行路径。&lt;/li>
&lt;li>&lt;strong>标准化:&lt;/strong> SQL 有 ANSI/ISO 标准（如 SQL-92, SQL:1999, SQL:2003, SQL:2008, SQL:2011, SQL:2016, SQL:2019），确保了核心语法的通用性。但&lt;strong>不同数据库厂商（如 MySQL, PostgreSQL, Oracle, SQL Server）在实现标准 SQL 的同时，都扩展了自己的特有功能（方言）和数据类型&lt;/strong>。编写可移植的 SQL 需要注意这些差异。&lt;/li>
&lt;li>&lt;strong>强大的查询能力:&lt;/strong> 通过 &lt;code>SELECT&lt;/code> 语句结合 &lt;code>WHERE&lt;/code>, &lt;code>JOIN&lt;/code>, &lt;code>GROUP BY&lt;/code>, &lt;code>HAVING&lt;/code>, 子查询、窗口函数等，可以执行非常复杂的数据检索、聚合和分析操作。&lt;/li>
&lt;li>&lt;strong>数据完整性与安全性:&lt;/strong> 通过约束（主键、外键、唯一约束、非空约束、检查约束）、事务（ACID）和权限控制（DCL）来保证数据的准确、一致和安全。&lt;/li>
&lt;/ul>
&lt;h2 id="sql-的实际应用场景">SQL 的实际应用场景
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>数据检索与分析:&lt;/strong> 这是 SQL 最核心的用途。分析师、数据科学家、产品经理等使用 SQL 从海量数据中提取所需信息，生成报告，进行业务分析。&lt;/li>
&lt;li>&lt;strong>Web 应用后端:&lt;/strong> 几乎所有动态网站（电商、社交网络、内容管理系统）的后端服务器都使用 SQL 数据库存储用户信息、产品数据、订单、帖子等内容，并通过 SQL 进行读写操作。&lt;/li>
&lt;li>&lt;strong>移动应用后端:&lt;/strong> 与 Web 应用类似，移动 App 的数据通常也存储在服务器端的 SQL 数据库中。&lt;/li>
&lt;li>&lt;strong>数据仓库与商业智能 (BI):&lt;/strong> SQL 是查询数据仓库（如 Amazon Redshift, Google BigQuery, Snowflake）和操作 BI 工具（如 Tableau, Power BI, Looker）的基础语言。&lt;/li>
&lt;li>&lt;strong>数据迁移与集成 (ETL):&lt;/strong> 在数据管道中，SQL 常用于从源数据库提取数据、在暂存区转换数据、以及加载到目标数据库或数据仓库。&lt;/li>
&lt;li>&lt;strong>数据库管理:&lt;/strong> DBA（数据库管理员）使用 SQL 进行数据库的创建、维护、性能调优、备份恢复、用户权限管理等。&lt;/li>
&lt;/ol>
&lt;h2 id="学习-sql-的建议">学习 SQL 的建议
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>动手实践:&lt;/strong> 理论学习是基础，但最重要的是动手写 SQL 语句。安装一个数据库（如 MySQL, PostgreSQL 或 SQLite）或使用在线练习平台（如 LeetCode, HackerRank, SQLZoo, Mode Analytics SQL Tutorial, W3Schools SQL）。&lt;/li>
&lt;li>&lt;strong>理解基础:&lt;/strong> 牢固掌握 &lt;code>SELECT&lt;/code>（包括所有关键子句 &lt;code>WHERE&lt;/code>, &lt;code>GROUP BY&lt;/code>, &lt;code>HAVING&lt;/code>, &lt;code>ORDER BY&lt;/code>, &lt;code>LIMIT&lt;/code>）、&lt;code>JOIN&lt;/code>（各种连接的区别）、基本的 &lt;code>INSERT&lt;/code>/&lt;code>UPDATE&lt;/code>/&lt;code>DELETE&lt;/code>。&lt;/li>
&lt;li>&lt;strong>掌握 &lt;code>JOIN&lt;/code>:&lt;/strong> 理解不同 &lt;code>JOIN&lt;/code> 类型（尤其是 &lt;code>INNER JOIN&lt;/code> 和 &lt;code>LEFT JOIN&lt;/code>）的工作原理和应用场景至关重要，因为实际数据通常分布在多个表中。&lt;/li>
&lt;li>&lt;strong>学习聚合与分组:&lt;/strong> &lt;code>GROUP BY&lt;/code> 和聚合函数（&lt;code>COUNT&lt;/code>, &lt;code>SUM&lt;/code>, &lt;code>AVG&lt;/code>, &lt;code>MIN&lt;/code>, &lt;code>MAX&lt;/code>）是数据分析的核心。&lt;/li>
&lt;li>&lt;strong>理解子查询:&lt;/strong> 学会编写和使用子查询来解决复杂问题。&lt;/li>
&lt;li>&lt;strong>熟悉所用数据库的文档:&lt;/strong> 了解你正在使用的特定数据库（MySQL, PostgreSQL 等）的语法细节、数据类型和特有功能。&lt;/li>
&lt;li>&lt;strong>关注性能:&lt;/strong> 学习如何编写高效的 SQL 查询（例如：使用索引、避免 &lt;code>SELECT *&lt;/code>、优化 &lt;code>JOIN&lt;/code> 和 &lt;code>WHERE&lt;/code> 条件）。&lt;code>EXPLAIN&lt;/code> 或 &lt;code>EXPLAIN ANALYZE&lt;/code> 命令是你的好朋友。&lt;/li>
&lt;li>&lt;strong>处理 &lt;code>NULL&lt;/code> 值:&lt;/strong> 理解 &lt;code>NULL&lt;/code> 在比较、计算和聚合中的行为，并学会使用 &lt;code>IS NULL&lt;/code> / &lt;code>IS NOT NULL&lt;/code> 和 &lt;code>COALESCE&lt;/code> / &lt;code>IFNULL&lt;/code> 等函数处理它。&lt;/li>
&lt;/ol>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>SQL 是管理和操作关系型数据库的基石语言。它功能强大、应用广泛，从简单的数据查询到复杂的业务逻辑实现都离不开它。无论是数据分析师、软件工程师、产品经理还是数据库管理员，掌握 SQL 都是一项极具价值的核心技能。其声明式的特性让你专注于“要什么”，而让数据库引擎去解决“怎么拿”的问题，极大地提高了数据处理的效率和便捷性。&lt;/p></description></item></channel></rss>