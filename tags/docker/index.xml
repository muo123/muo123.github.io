<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on 雪国流明</title><link>https://muo123.github.io/tags/docker/</link><description>Recent content in Docker on 雪国流明</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>muo123</copyright><lastBuildDate>Wed, 09 Jul 2025 21:56:23 +0800</lastBuildDate><atom:link href="https://muo123.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Windows11 使用 Docker 创建 Ubuntu 容器</title><link>https://muo123.github.io/articles/%E5%9C%A8-windows11-%E4%BD%BF%E7%94%A8-docker-%E5%88%9B%E5%BB%BA-ubuntu-%E5%AE%B9%E5%99%A8/</link><pubDate>Wed, 09 Jul 2025 21:52:08 +0800</pubDate><guid>https://muo123.github.io/articles/%E5%9C%A8-windows11-%E4%BD%BF%E7%94%A8-docker-%E5%88%9B%E5%BB%BA-ubuntu-%E5%AE%B9%E5%99%A8/</guid><description>&lt;img src="https://muo123.github.io/images/Docker%E5%88%9B%E5%BB%BAUbuntu%E5%AE%B9%E5%99%A8.jpg" alt="Featured image of post 在 Windows11 使用 Docker 创建 Ubuntu 容器" />&lt;p>在 Windows 系统上使用 Docker 创建 Ubuntu 容器的步骤如下：&lt;/p>
&lt;hr>
&lt;h3 id="1-确保-docker-环境就绪">1. 确保 Docker 环境就绪
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>安装 Docker Desktop&lt;/strong>&lt;br>
下载地址：&lt;a class="link" href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener"
>https://www.docker.com/products/docker-desktop&lt;/a>&lt;br>
安装后启动 Docker Desktop（系统托盘出现鲸鱼图标即表示运行成功）。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>验证 Docker 安装&lt;/strong>&lt;br>
打开 PowerShell 或 CMD，执行：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker --version &lt;span style="color:#78787e"># 查看 Docker 版本&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run hello-world &lt;span style="color:#78787e"># 测试基础功能&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="2-拉取-ubuntu-镜像">2. 拉取 Ubuntu 镜像
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker pull ubuntu:latest &lt;span style="color:#78787e"># 下载最新版 Ubuntu 镜像&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="3-创建并运行-ubuntu-容器">3. 创建并运行 Ubuntu 容器
&lt;/h3>&lt;h4 id="基础交互模式临时容器">基础交互模式（临时容器）
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -it --name my_ubuntu ubuntu:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-it&lt;/code>：进入交互模式（分配伪终端）&lt;/li>
&lt;li>&lt;code>--name my_ubuntu&lt;/code>：为容器命名（可自定义）&lt;/li>
&lt;li>此时会直接进入容器的 Bash Shell&lt;/li>
&lt;/ul>
&lt;h4 id="后台运行模式长期容器">后台运行模式（长期容器）
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -d --name my_ubuntu ubuntu:latest sleep infinity
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>-d&lt;/code>：容器在后台运行&lt;/li>
&lt;li>&lt;code>sleep infinity&lt;/code>：保持容器持续运行（避免自动退出）&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="4-进入已运行的容器">4. 进入已运行的容器
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#ff5c57">exec&lt;/span> -it my_ubuntu /bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>此命令会打开容器的 Bash Shell&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3 id="5-常用容器操作命令">5. 常用容器操作命令
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>docker ps&lt;/code>&lt;/td>
&lt;td>查看运行中的容器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>docker ps -a&lt;/code>&lt;/td>
&lt;td>查看所有容器（含已停止的）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>docker stop my_ubuntu&lt;/code>&lt;/td>
&lt;td>停止容器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>docker start my_ubuntu&lt;/code>&lt;/td>
&lt;td>启动已停止的容器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>docker rm my_ubuntu&lt;/code>&lt;/td>
&lt;td>删除容器&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>docker rmi ubuntu:latest&lt;/code>&lt;/td>
&lt;td>删除镜像&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="6-高级用法示例">6. 高级用法示例
&lt;/h3>&lt;h4 id="挂载主机目录到容器">挂载主机目录到容器
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -it -v C:&lt;span style="color:#5af78e">\H&lt;/span>ostData:/container_data ubuntu:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>将 Windows 的 &lt;code>C:\HostData&lt;/code> 映射到容器的 &lt;code>/container_data&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="端口映射">端口映射
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run -d -p 8080:80 --name web_server ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>将容器的 80 端口映射到主机的 8080 端口&lt;/li>
&lt;/ul>
&lt;h4 id="保存容器修改为新镜像">保存容器修改为新镜像
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker commit my_ubuntu my_custom_ubuntu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h3 id="常见问题解决">常见问题解决
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Docker 无法启动&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>确保已启用 WSL 2（Windows 10/11 必需）&lt;/li>
&lt;li>在 PowerShell 管理员模式运行：
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>wsl --update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>wsl --set-default-version &lt;span style="color:#ff9f43">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>权限不足错误&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>在 Docker Desktop 设置中启用 &lt;strong>WSL Integration&lt;/strong>&lt;/li>
&lt;li>或以管理员身份运行 PowerShell&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>文件路径问题&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Windows 路径需转换为 Linux 风格（如 &lt;code>/c/HostData&lt;/code>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;hr>
&lt;p>通过以上步骤，您已成功在 Windows 上运行 Ubuntu 容器。接下来可以在容器内安装软件（如 &lt;code>apt update &amp;amp;&amp;amp; apt install python3&lt;/code>）或部署应用。&lt;/p></description></item><item><title>Docker Compose 文件详解</title><link>https://muo123.github.io/articles/docker-compose-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link><pubDate>Tue, 08 Jul 2025 19:57:20 +0800</pubDate><guid>https://muo123.github.io/articles/docker-compose-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="docker-compose-文件详解">Docker Compose 文件详解
&lt;/h1>&lt;p>Docker Compose 是一个用于定义和运行多容器 Docker 应用程序的工具，通过 YAML 文件配置应用服务。下面详细介绍如何编写 &lt;code>docker-compose.yml&lt;/code> 文件来管理 Python 开发环境。&lt;/p>
&lt;h2 id="基本结构">基本结构
&lt;/h2>&lt;p>一个典型的 Python 开发环境 &lt;code>docker-compose.yml&lt;/code> 文件包含以下部分：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">version&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">build&lt;/span>: .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;5000:5000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - .:/app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_ENV=development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">command&lt;/span>: flask run --host=0.0.0.0 --port=5000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="核心指令详解">核心指令详解
&lt;/h2>&lt;h3 id="1-version">1. &lt;code>version&lt;/code>
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">version&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>指定使用的 Compose 文件格式版本&lt;/li>
&lt;li>常用版本：&amp;lsquo;3.8&amp;rsquo;（最新稳定版）&lt;/li>
&lt;li>不同版本支持的功能不同&lt;/li>
&lt;/ul>
&lt;h3 id="2-services">2. &lt;code>services&lt;/code>
&lt;/h3>&lt;p>定义要运行的各个容器服务。&lt;/p>
&lt;h4 id="服务定义示例">服务定义示例：
&lt;/h4>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>: &lt;span style="color:#78787e"># 服务名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">build&lt;/span>: . &lt;span style="color:#78787e"># 使用当前目录的Dockerfile构建&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: my-python-app &lt;span style="color:#78787e"># 可选，指定镜像名称&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">container_name&lt;/span>: my-app &lt;span style="color:#78787e"># 可选，指定容器名称&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-build">3. &lt;code>build&lt;/code>
&lt;/h3>&lt;p>指定构建镜像的配置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">build&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">context&lt;/span>: . &lt;span style="color:#78787e"># 构建上下文路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">dockerfile&lt;/span>: Dockerfile &lt;span style="color:#78787e"># 指定Dockerfile文件名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">args&lt;/span>: &lt;span style="color:#78787e"># 构建参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - PYTHON_VERSION=3.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-ports">4. &lt;code>ports&lt;/code>
&lt;/h3>&lt;p>端口映射：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;5000:5000&amp;#34;&lt;/span> &lt;span style="color:#78787e"># 主机端口:容器端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;8000:8000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>左侧为主机端口，右侧为容器端口&lt;/li>
&lt;li>仅指定容器端口时，主机端口随机分配：&lt;code>&amp;quot;5000&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="5-volumes">5. &lt;code>volumes&lt;/code>
&lt;/h3>&lt;p>数据卷挂载：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - .:/app &lt;span style="color:#78787e"># 主机路径:容器路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /path/on/host:/path/in/container
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - data_volume:/data &lt;span style="color:#78787e"># 使用命名卷&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>开发时常用挂载项目目录实现代码热更新&lt;/li>
&lt;li>命名卷需要在顶层 &lt;code>volumes&lt;/code> 部分声明&lt;/li>
&lt;/ul>
&lt;h3 id="6-environment">6. &lt;code>environment&lt;/code>
&lt;/h3>&lt;p>环境变量设置：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_ENV=development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_DEBUG=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - DATABASE_URL=postgres://user:pass@db:5432/mydb
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或使用键值对格式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">FLASK_ENV&lt;/span>: &lt;span style="color:#5af78e">&amp;#34;development&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">FLASK_DEBUG&lt;/span>: &lt;span style="color:#5af78e">&amp;#34;1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="7-command">7. &lt;code>command&lt;/code>
&lt;/h3>&lt;p>覆盖容器启动命令：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">command&lt;/span>: flask run --host=0.0.0.0 --port=5000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>或数组格式：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">command&lt;/span>: [&lt;span style="color:#5af78e">&amp;#34;flask&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;run&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;--host=0.0.0.0&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;--port=5000&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="高级配置">高级配置
&lt;/h2>&lt;h3 id="1-依赖关系-depends_on">1. 依赖关系 (&lt;code>depends_on&lt;/code>)
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">depends_on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - redis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">db&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: postgres:13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">redis&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: redis:6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>控制服务启动顺序&lt;/li>
&lt;li>不等待依赖服务&amp;quot;就绪&amp;quot;，只是&amp;quot;启动&amp;quot;&lt;/li>
&lt;/ul>
&lt;h3 id="2-健康检查-healthcheck">2. 健康检查 (&lt;code>healthcheck&lt;/code>)
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">healthcheck&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">test&lt;/span>: [&lt;span style="color:#5af78e">&amp;#34;CMD&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;curl&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;-f&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;http://localhost:5000/health&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">interval&lt;/span>: 30s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">timeout&lt;/span>: 10s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">retries&lt;/span>: &lt;span style="color:#ff9f43">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">start_period&lt;/span>: 10s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-资源限制-resources">3. 资源限制 (&lt;code>resources&lt;/code>)
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">deploy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">limits&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">cpus&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;0.50&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">memory&lt;/span>: 512M
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">reservations&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">memory&lt;/span>: 256M
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-网络配置-networks">4. 网络配置 (&lt;code>networks&lt;/code>)
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - frontend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - backend
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">frontend&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">backend&lt;/span>:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="完整-python-开发环境示例">完整 Python 开发环境示例
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">version&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">build&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">context&lt;/span>: .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">dockerfile&lt;/span>: Dockerfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - PYTHON_VERSION=3.9
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: my-python-app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">container_name&lt;/span>: python-web
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;5000:5000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - .:/app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /app/.venv &lt;span style="color:#78787e"># 避免将虚拟环境挂载到主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_ENV=development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_DEBUG=1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">depends_on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - redis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">restart&lt;/span>: unless-stopped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - app-network
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">db&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: postgres:13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">POSTGRES_USER&lt;/span>: devuser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">POSTGRES_PASSWORD&lt;/span>: devpass
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">POSTGRES_DB&lt;/span>: devdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - postgres_data:/var/lib/postgresql/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;5432:5432&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - app-network
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">redis&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">image&lt;/span>: redis:6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;6379:6379&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - redis_data:/data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - app-network
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">postgres_data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">redis_data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">networks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">app-network&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">driver&lt;/span>: bridge
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="常用命令">常用命令
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 启动所有服务（后台运行）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose up -d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 查看服务状态&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose ps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 查看服务日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose logs -f web
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 停止服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose down
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 重建并启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose up -d --build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 进入运行中的容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose &lt;span style="color:#ff5c57">exec&lt;/span> web bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 运行一次性命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker-compose run web python manage.py migrate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="开发环境优化技巧">开发环境优化技巧
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>使用覆盖文件&lt;/strong>：创建 &lt;code>docker-compose.override.yml&lt;/code> 用于开发特定配置&lt;/li>
&lt;li>&lt;strong>环境变量文件&lt;/strong>：使用 &lt;code>.env&lt;/code> 文件管理环境变量&lt;/li>
&lt;li>&lt;strong>缓存依赖&lt;/strong>：对 &lt;code>pip&lt;/code> 缓存使用命名卷&lt;/li>
&lt;li>&lt;strong>热重载&lt;/strong>：确保正确挂载代码目录并设置开发环境变量&lt;/li>
&lt;li>&lt;strong>多阶段Compose&lt;/strong>：使用不同文件管理开发和生产配置&lt;/li>
&lt;/ol>
&lt;p>通过合理配置 &lt;code>docker-compose.yml&lt;/code>，你可以轻松管理包含多个服务的复杂 Python 开发环境，并确保团队成员使用完全相同的环境配置。&lt;/p></description></item><item><title>Dockfile 文件详解</title><link>https://muo123.github.io/articles/dockfile-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</link><pubDate>Tue, 08 Jul 2025 19:55:29 +0800</pubDate><guid>https://muo123.github.io/articles/dockfile-%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h1 id="dockerfile-编写详解">Dockerfile 编写详解
&lt;/h1>&lt;p>Dockerfile 是一个文本文件，包含了一系列用于构建 Docker 镜像的指令。下面我将详细介绍如何编写一个高效的 Python 开发环境 Dockerfile。&lt;/p>
&lt;h2 id="基本结构">基本结构
&lt;/h2>&lt;p>一个典型的 Python 项目 Dockerfile 包含以下部分：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 1. 基础镜像&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 2. 元数据 (可选)&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">maintainer&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;your.email@example.com&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">version&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">description&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;Python development environment&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 3. 环境变量设置&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> PYTHONDONTWRITEBYTECODE &lt;span style="color:#ff9f43">1&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> PYTHONUNBUFFERED &lt;span style="color:#ff9f43">1&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 4. 工作目录设置&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 5. 依赖安装 (先复制requirements文件，利用Docker缓存层)&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> requirements.txt .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install --no-cache-dir -r requirements.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 6. 复制项目文件&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 7. 暴露端口 (可选)&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">EXPOSE&lt;/span>&lt;span style="color:#5af78e"> 8000&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 8. 启动命令&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;python&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;app.py&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="指令详解">指令详解
&lt;/h2>&lt;h3 id="1-from---指定基础镜像">1. FROM - 指定基础镜像
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>python:3.9-slim&lt;/code> 是官方提供的轻量级 Python 镜像&lt;/li>
&lt;li>其他常用变体：
&lt;ul>
&lt;li>&lt;code>python:3.9&lt;/code> - 完整版&lt;/li>
&lt;li>&lt;code>python:3.9-alpine&lt;/code> - 更小的基于 Alpine Linux 的镜像&lt;/li>
&lt;li>&lt;code>python:3.9-buster&lt;/code> - 基于 Debian Buster&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-label---添加元数据">2. LABEL - 添加元数据
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">maintainer&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;your.email@example.com&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">version&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>为镜像添加元信息，便于管理&lt;/li>
&lt;li>可以使用多个 LABEL 指令或合并为一个：
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">LABEL&lt;/span> &lt;span style="color:#ff5c57">maintainer&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;your.email@example.com&amp;#34;&lt;/span> &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> &lt;span style="color:#ff5c57">version&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;1.0&amp;#34;&lt;/span> &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> &lt;span style="color:#ff5c57">description&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;Python development environment&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="3-env---设置环境变量">3. ENV - 设置环境变量
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">ENV&lt;/span> PYTHONDONTWRITEBYTECODE &lt;span style="color:#ff9f43">1&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> PYTHONUNBUFFERED &lt;span style="color:#ff9f43">1&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>PYTHONDONTWRITEBYTECODE=1&lt;/code>：防止 Python 将 pyc 文件写入磁盘&lt;/li>
&lt;li>&lt;code>PYTHONUNBUFFERED=1&lt;/code>：确保 Python 输出直接发送到终端而不被缓冲&lt;/li>
&lt;li>其他常用环境变量：
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">FLASK_APP&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>app.py&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">FLASK_ENV&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>development
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="4-workdir---设置工作目录">4. WORKDIR - 设置工作目录
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>设置容器内的工作目录&lt;/li>
&lt;li>如果目录不存在会自动创建&lt;/li>
&lt;li>后续的 RUN、CMD、COPY 等指令都会在这个目录下执行&lt;/li>
&lt;/ul>
&lt;h3 id="5-copy-和-run---复制文件和安装依赖">5. COPY 和 RUN - 复制文件和安装依赖
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">COPY&lt;/span> requirements.txt .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install --no-cache-dir -r requirements.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;strong>最佳实践&lt;/strong>：先单独复制 requirements.txt 并安装依赖，这样可以更好地利用 Docker 的缓存层&lt;/li>
&lt;li>&lt;code>--no-cache-dir&lt;/code>：告诉 pip 不要缓存下载的包，减小镜像大小&lt;/li>
&lt;li>对于生产环境，可以添加 &lt;code>--no-deps&lt;/code> 只安装项目直接依赖&lt;/li>
&lt;/ul>
&lt;h3 id="6-copy---复制项目文件">6. COPY - 复制项目文件
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>第一个 &lt;code>.&lt;/code> 表示主机当前目录&lt;/li>
&lt;li>第二个 &lt;code>.&lt;/code> 表示容器内的当前目录（由 WORKDIR 指定）&lt;/li>
&lt;li>可以使用 &lt;code>.dockerignore&lt;/code> 文件排除不需要复制的文件和目录&lt;/li>
&lt;/ul>
&lt;h3 id="7-expose---声明端口">7. EXPOSE - 声明端口
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">EXPOSE&lt;/span>&lt;span style="color:#5af78e"> 8000&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>声明容器运行时监听的端口&lt;/li>
&lt;li>这只是文档作用，实际端口映射需要在 &lt;code>docker run&lt;/code> 时用 &lt;code>-p&lt;/code> 参数指定&lt;/li>
&lt;/ul>
&lt;h3 id="8-cmd---指定容器启动命令">8. CMD - 指定容器启动命令
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;python&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;app.py&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>容器启动时执行的命令&lt;/li>
&lt;li>使用 &lt;strong>exec 形式&lt;/strong>（JSON 数组格式）而不是 shell 形式&lt;/li>
&lt;li>一个 Dockerfile 中只能有一个 CMD 指令&lt;/li>
&lt;/ul>
&lt;h2 id="高级用法">高级用法
&lt;/h2>&lt;h3 id="多阶段构建">多阶段构建
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 第一阶段：构建环境&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9 as builder&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> requirements.txt .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install --user -r requirements.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 第二阶段：运行环境&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 从builder阶段复制已安装的Python包&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> --from&lt;span style="color:#ff6ac1">=&lt;/span>builder /root/.local /root/.local&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 确保脚本能够找到用户安装的包&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">PATH&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>/root/.local/bin:&lt;span style="color:#ff5c57">$PATH&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;python&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;app.py&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使用虚拟环境">使用虚拟环境
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> python -m venv /opt/venv&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">PATH&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#5af78e">&amp;#34;/opt/venv/bin:&lt;/span>&lt;span style="color:#ff5c57">$PATH&lt;/span>&lt;span style="color:#5af78e">&amp;#34;&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> requirements.txt .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install -r requirements.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="针对开发环境的优化">针对开发环境的优化
&lt;/h3>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 开发专用环境变量&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">FLASK_ENV&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">ENV&lt;/span> &lt;span style="color:#ff5c57">FLASK_DEBUG&lt;/span>&lt;span style="color:#ff6ac1">=&lt;/span>&lt;span style="color:#ff9f43">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 安装开发依赖&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> requirements-dev.txt .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install -r requirements-dev.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . .&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 使用flask run自动重载&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;flask&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;run&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;--host=0.0.0.0&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="最佳实践">最佳实践
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>使用特定版本标签&lt;/strong>：避免使用 &lt;code>latest&lt;/code> 标签&lt;/li>
&lt;li>&lt;strong>最小化镜像&lt;/strong>：使用 &lt;code>-slim&lt;/code> 或 &lt;code>-alpine&lt;/code> 变体&lt;/li>
&lt;li>&lt;strong>利用缓存&lt;/strong>：将不常变化的指令放在前面&lt;/li>
&lt;li>&lt;strong>减少层数&lt;/strong>：合并 RUN 指令
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">RUN&lt;/span> apt-get update &lt;span style="color:#ff6ac1">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> apt-get install -y --no-install-recommends &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> gcc &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> python3-dev &lt;span style="color:#ff6ac1">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#5af78e">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#5af78e">&lt;/span> rm -rf /var/lib/apt/lists/*&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>安全扫描&lt;/strong>：构建后使用 &lt;code>docker scan&lt;/code> 检查漏洞&lt;/li>
&lt;li>&lt;strong>使用 .dockerignore&lt;/strong>：避免复制不必要的文件&lt;/li>
&lt;/ol>
&lt;p>通过以上详细的 Dockerfile 编写指南，你可以为 Python 项目创建高效、安全的开发环境容器。&lt;/p></description></item><item><title>在 Windows 11 上使用 Docker 创建 Python 环境</title><link>https://muo123.github.io/articles/%E5%9C%A8-windows-11-%E4%B8%8A%E4%BD%BF%E7%94%A8-docker-%E5%88%9B%E5%BB%BA-python-%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 08 Jul 2025 19:50:03 +0800</pubDate><guid>https://muo123.github.io/articles/%E5%9C%A8-windows-11-%E4%B8%8A%E4%BD%BF%E7%94%A8-docker-%E5%88%9B%E5%BB%BA-python-%E7%8E%AF%E5%A2%83/</guid><description>&lt;img src="https://muo123.github.io/images/Windows11%E4%BD%BF%E7%94%A8Docker%E5%88%9B%E5%BB%BAPython%E7%8E%AF%E5%A2%83.png" alt="Featured image of post 在 Windows 11 上使用 Docker 创建 Python 环境" />&lt;h1 id="在windows-11上使用docker创建python开发环境">在Windows 11上使用Docker创建Python开发环境
&lt;/h1>&lt;p>使用Docker创建Python开发环境可以确保开发环境的一致性，并避免&amp;quot;在我机器上能运行&amp;quot;的问题。以下是在Windows 11上设置Python开发环境的步骤：&lt;/p>
&lt;h2 id="前提条件">前提条件
&lt;/h2>&lt;ol>
&lt;li>Windows 11系统&lt;/li>
&lt;li>已安装Docker Desktop for Windows&lt;/li>
&lt;li>启用WSL 2（推荐）&lt;/li>
&lt;/ol>
&lt;h2 id="步骤1安装docker-desktop">步骤1：安装Docker Desktop
&lt;/h2>&lt;p>如果尚未安装：&lt;/p>
&lt;ol>
&lt;li>从&lt;a class="link" href="https://www.docker.com/products/docker-desktop" target="_blank" rel="noopener"
>Docker官网&lt;/a>下载Docker Desktop&lt;/li>
&lt;li>安装并启动Docker Desktop&lt;/li>
&lt;li>确保在设置中启用WSL 2后端（Settings &amp;gt; General &amp;gt; Use WSL 2 based engine）&lt;/li>
&lt;/ol>
&lt;h2 id="步骤2创建项目目录">步骤2：创建项目目录
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>mkdir &lt;span style="color:#ff5c57">python-docker&lt;/span>-project
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">cd python-docker&lt;/span>-project
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="步骤3创建dockerfile">步骤3：创建Dockerfile
&lt;/h2>&lt;p>在项目目录中创建&lt;code>Dockerfile&lt;/code>文件（无扩展名），内容如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 使用官方Python镜像作为基础&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> python:3.9-slim&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 设置工作目录&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 复制当前目录内容到容器中的/app目录&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . /app&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 安装项目依赖&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> pip install --no-cache-dir -r requirements.txt&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#78787e"># 容器启动时运行的命令&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;python&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;your_script.py&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="步骤4创建requirementstxt">步骤4：创建requirements.txt
&lt;/h2>&lt;p>在同一目录下创建&lt;code>requirements.txt&lt;/code>文件，列出你的Python依赖，例如：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>flask==2.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>numpy==1.21.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pandas==1.3.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="步骤5创建docker-composeyml可选但推荐">步骤5：创建docker-compose.yml（可选但推荐）
&lt;/h2>&lt;p>对于更复杂的开发环境，使用docker-compose更方便：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">version&lt;/span>: &lt;span style="color:#5af78e">&amp;#39;3.8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">web&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">build&lt;/span>: .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#5af78e">&amp;#34;5000:5000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - .:/app
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">environment&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - FLASK_ENV=development
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ff6ac1">command&lt;/span>: python your_script.py
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="步骤6构建并运行容器">步骤6：构建并运行容器
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 构建镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker build -t &lt;span style="color:#ff5c57">python-dev&lt;/span> .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 运行容器（如果使用docker-compose则运行下面的命令）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -it --rm -p &lt;span style="color:#ff9f43">5000&lt;/span>&lt;span style="color:#ff5c57">:&lt;/span>&lt;span style="color:#ff9f43">5000&lt;/span> -v ${PWD}&lt;span style="color:#ff5c57">:&lt;/span>/app &lt;span style="color:#ff5c57">python-dev&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 或者使用docker-compose&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">docker-compose&lt;/span> up
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="开发工作流程">开发工作流程
&lt;/h2>&lt;ol>
&lt;li>使用你喜欢的编辑器（如VS Code）编辑本地文件&lt;/li>
&lt;li>更改会自动同步到容器中（因为挂载了卷）&lt;/li>
&lt;li>测试和调试在容器环境中进行&lt;/li>
&lt;/ol>
&lt;h2 id="vs-code集成推荐">VS Code集成（推荐）
&lt;/h2>&lt;ol>
&lt;li>安装&amp;quot;Docker&amp;quot;和&amp;quot;Remote - Containers&amp;quot;扩展&lt;/li>
&lt;li>打开项目文件夹&lt;/li>
&lt;li>按F1，选择&amp;quot;Remote-Containers: Open Folder in Container&amp;quot;&lt;/li>
&lt;li>选择你的Dockerfile或docker-compose.yml&lt;/li>
&lt;/ol>
&lt;h2 id="常用命令">常用命令
&lt;/h2>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-powershell" data-lang="powershell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 查看运行中的容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker &lt;span style="color:#ff5c57">ps
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 进入运行中的容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker exec -it &amp;lt;&lt;span style="color:#ff5c57">container-id&lt;/span>&amp;gt; bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 停止容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker stop &amp;lt;&lt;span style="color:#ff5c57">container-id&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 删除所有停止的容器&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker container prune
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#78787e"># 删除未使用的镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker image prune
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="提示">提示
&lt;/h2>&lt;ul>
&lt;li>对于数据科学项目，可以考虑使用&lt;code>python:3.9-slim&lt;/code>或&lt;code>jupyter/datascience-notebook&lt;/code>镜像&lt;/li>
&lt;li>如果需要GUI支持，需要额外配置X11转发&lt;/li>
&lt;li>对于生产环境，使用多阶段构建以减少镜像大小&lt;/li>
&lt;/ul>
&lt;p>这样你就有了一个隔离的、可复制的Python开发环境，可以在任何支持Docker的机器上运行。&lt;/p></description></item><item><title>简单了解 Docker</title><link>https://muo123.github.io/articles/%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3-docker/</link><pubDate>Tue, 08 Jul 2025 19:40:54 +0800</pubDate><guid>https://muo123.github.io/articles/%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3-docker/</guid><description>&lt;img src="https://muo123.github.io/images/Docker%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D.jpg" alt="Featured image of post 简单了解 Docker" />&lt;h2 id="什么是docker">什么是Docker？
&lt;/h2>&lt;p>Docker是一个开源的容器化平台，用于开发、部署和运行应用程序。它允许开发者将应用程序及其依赖项打包到一个轻量级、可移植的容器中，然后可以在任何支持Docker的环境中运行。&lt;/p>
&lt;h2 id="docker的核心概念">Docker的核心概念
&lt;/h2>&lt;h3 id="1-容器container">1. 容器(Container)
&lt;/h3>&lt;ul>
&lt;li>轻量级的、可执行的软件包，包含运行应用程序所需的一切：代码、运行时、系统工具、系统库和设置&lt;/li>
&lt;li>与虚拟机不同，容器共享主机系统的内核，不需要单独的操作系统&lt;/li>
&lt;li>提供进程隔离，确保应用程序在不同环境中行为一致&lt;/li>
&lt;/ul>
&lt;h3 id="2-镜像image">2. 镜像(Image)
&lt;/h3>&lt;ul>
&lt;li>容器的模板，包含创建容器所需的指令&lt;/li>
&lt;li>由多层文件系统组成，每一层代表镜像构建过程中的一个指令&lt;/li>
&lt;li>镜像是只读的，当从镜像启动容器时，Docker会在镜像顶部添加一个可写层&lt;/li>
&lt;/ul>
&lt;h3 id="3-dockerfile">3. Dockerfile
&lt;/h3>&lt;ul>
&lt;li>文本文件，包含构建Docker镜像所需的所有命令&lt;/li>
&lt;li>每条指令都会在镜像中创建一个新层&lt;/li>
&lt;li>示例Dockerfile:
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff6ac1">FROM&lt;/span>&lt;span style="color:#5af78e"> ubuntu:20.04&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">RUN&lt;/span> apt-get update &lt;span style="color:#ff6ac1">&amp;amp;&amp;amp;&lt;/span> apt-get install -y python3&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">COPY&lt;/span> . /app&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">WORKDIR&lt;/span>&lt;span style="color:#5af78e"> /app&lt;/span>&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff5c57">&lt;/span>&lt;span style="color:#ff6ac1">CMD&lt;/span> [&lt;span style="color:#5af78e">&amp;#34;python3&amp;#34;&lt;/span>, &lt;span style="color:#5af78e">&amp;#34;app.py&amp;#34;&lt;/span>]&lt;span style="color:#ff5c57">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="4-docker引擎">4. Docker引擎
&lt;/h3>&lt;ul>
&lt;li>Docker的核心组件，包括：
&lt;ul>
&lt;li>Docker守护进程(dockerd)：管理容器、镜像、网络和存储卷&lt;/li>
&lt;li>REST API：与守护进程交互的接口&lt;/li>
&lt;li>Docker CLI：用户与Docker交互的命令行工具&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="docker的主要优势">Docker的主要优势
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>一致性环境&lt;/strong>：开发、测试和生产环境一致&lt;/li>
&lt;li>&lt;strong>隔离性&lt;/strong>：应用程序在容器中相互隔离&lt;/li>
&lt;li>&lt;strong>轻量级&lt;/strong>：比传统虚拟机更高效，启动更快&lt;/li>
&lt;li>&lt;strong>可移植性&lt;/strong>：一次构建，随处运行&lt;/li>
&lt;li>&lt;strong>微服务友好&lt;/strong>：适合微服务架构部署&lt;/li>
&lt;li>&lt;strong>版本控制和组件重用&lt;/strong>：镜像可以版本化并重用&lt;/li>
&lt;/ol>
&lt;h2 id="docker基本命令">Docker基本命令
&lt;/h2>&lt;h3 id="镜像相关">镜像相关
&lt;/h3>&lt;ul>
&lt;li>&lt;code>docker pull &amp;lt;image&amp;gt;&lt;/code>：从仓库拉取镜像&lt;/li>
&lt;li>&lt;code>docker build -t &amp;lt;name&amp;gt; .&lt;/code>：根据Dockerfile构建镜像&lt;/li>
&lt;li>&lt;code>docker images&lt;/code>：列出本地镜像&lt;/li>
&lt;li>&lt;code>docker rmi &amp;lt;image&amp;gt;&lt;/code>：删除镜像&lt;/li>
&lt;/ul>
&lt;h3 id="容器相关">容器相关
&lt;/h3>&lt;ul>
&lt;li>&lt;code>docker run &amp;lt;image&amp;gt;&lt;/code>：从镜像创建并启动容器&lt;/li>
&lt;li>&lt;code>docker ps&lt;/code>：列出运行中的容器&lt;/li>
&lt;li>&lt;code>docker ps -a&lt;/code>：列出所有容器&lt;/li>
&lt;li>&lt;code>docker stop &amp;lt;container&amp;gt;&lt;/code>：停止容器&lt;/li>
&lt;li>&lt;code>docker start &amp;lt;container&amp;gt;&lt;/code>：启动已停止的容器&lt;/li>
&lt;li>&lt;code>docker rm &amp;lt;container&amp;gt;&lt;/code>：删除容器&lt;/li>
&lt;li>&lt;code>docker exec -it &amp;lt;container&amp;gt; /bin/bash&lt;/code>：进入运行中的容器&lt;/li>
&lt;/ul>
&lt;h3 id="网络相关">网络相关
&lt;/h3>&lt;ul>
&lt;li>&lt;code>docker network ls&lt;/code>：列出网络&lt;/li>
&lt;li>&lt;code>docker network create &amp;lt;name&amp;gt;&lt;/code>：创建网络&lt;/li>
&lt;li>&lt;code>docker network connect &amp;lt;network&amp;gt; &amp;lt;container&amp;gt;&lt;/code>：连接容器到网络&lt;/li>
&lt;/ul>
&lt;h2 id="docker架构">Docker架构
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>&lt;strong>客户端-服务器架构&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>Docker客户端与Docker守护进程通信&lt;/li>
&lt;li>守护进程负责构建、运行和分发容器&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>主要组件&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>Docker客户端(CLI)&lt;/li>
&lt;li>Docker主机(运行守护进程)&lt;/li>
&lt;li>注册表(Docker Hub等)存储镜像&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="docker使用场景">Docker使用场景
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>应用程序打包和部署&lt;/strong>&lt;/li>
&lt;li>&lt;strong>持续集成和持续部署(CI/CD)&lt;/strong>&lt;/li>
&lt;li>&lt;strong>微服务架构&lt;/strong>&lt;/li>
&lt;li>&lt;strong>开发环境标准化&lt;/strong>&lt;/li>
&lt;li>&lt;strong>快速搭建测试环境&lt;/strong>&lt;/li>
&lt;li>&lt;strong>平台即服务(PaaS)部署&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h2 id="docker生态系统">Docker生态系统
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Docker Compose&lt;/strong>：用于定义和运行多容器应用程序&lt;/li>
&lt;li>&lt;strong>Docker Swarm&lt;/strong>：Docker原生的集群管理和编排工具&lt;/li>
&lt;li>&lt;strong>Kubernetes&lt;/strong>：流行的容器编排系统(虽然不专属于Docker，但常与Docker一起使用)&lt;/li>
&lt;li>&lt;strong>Docker Hub&lt;/strong>：公共镜像注册表&lt;/li>
&lt;li>&lt;strong>Docker Desktop&lt;/strong>：Mac和Windows上的Docker桌面应用&lt;/li>
&lt;/ul>
&lt;h2 id="docker与传统虚拟机的比较">Docker与传统虚拟机的比较
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特性&lt;/th>
&lt;th>Docker容器&lt;/th>
&lt;th>传统虚拟机&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>启动时间&lt;/td>
&lt;td>秒级&lt;/td>
&lt;td>分钟级&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>性能&lt;/td>
&lt;td>接近原生&lt;/td>
&lt;td>有损耗&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>硬盘使用&lt;/td>
&lt;td>一般为MB级&lt;/td>
&lt;td>一般为GB级&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>系统支持量&lt;/td>
&lt;td>单机支持上千容器&lt;/td>
&lt;td>一般几十个&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>隔离性&lt;/td>
&lt;td>进程级别&lt;/td>
&lt;td>系统级别&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>操作系统&lt;/td>
&lt;td>共享主机OS&lt;/td>
&lt;td>每个VM有独立OS&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>Docker通过容器化技术彻底改变了软件开发和部署的方式，提供了轻量级、一致性和可移植性的解决方案。它已成为现代DevOps实践和云原生应用开发的核心工具之一。&lt;/p></description></item></channel></rss>